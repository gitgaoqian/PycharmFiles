<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html>
<head>
	<meta http-equiv="content-type" content="text/html; charset=utf-8">
	<title></title>
	<meta name="generator" content="LibreOffice 4.2.3.3 (Linux)">
	<meta name="created" content="0;0">
	<meta name="changed" content="20170404;92922588099453">
	<style type="text/css">
	<!--
		p { color: #000000 }
	-->
	</style>
</head>
<body lang="en-US" text="#000000" dir="ltr" style="background: transparent">
<p><font face="FreeSans"><span lang="hi-IN"><font face="FreeSans"><span lang="hi-IN">﻿</span></font></span></font><b>http</b><font face="Droid Sans Fallback"><span lang="zh-CN"><font face="Droid Sans Fallback"><span lang="zh-CN"><b>协议</b></span></font></span></font>:<font face="Droid Sans Fallback"><span lang="zh-CN"><font face="Droid Sans Fallback"><span lang="zh-CN">要求学会用谷歌自带的网页开发工具进行网页的解读</span></font></span></font>(<font face="Droid Sans Fallback"><span lang="zh-CN"><font face="Droid Sans Fallback"><span lang="zh-CN">客户端</span></font></span></font>request
headers<font face="Droid Sans Fallback"><span lang="zh-CN"><font face="Droid Sans Fallback"><span lang="zh-CN">中的内容和服务器</span></font></span></font>response
headers<font face="Droid Sans Fallback"><span lang="zh-CN"><font face="Droid Sans Fallback"><span lang="zh-CN">中的内容</span></font></span></font>)
</p>
<p><b>restapi</b><font face="Droid Sans Fallback"><span lang="zh-CN"><font face="Droid Sans Fallback"><span lang="zh-CN"><b>的本质</b></span></font></span></font><b>:http</b><font face="Droid Sans Fallback"><span lang="zh-CN"><font face="Droid Sans Fallback"><span lang="zh-CN"><b>协议</b></span></font></span></font></p>
<p><b>HTML</b>: <font face="Droid Sans Fallback"><span lang="zh-CN"><font face="Droid Sans Fallback"><span lang="zh-CN">知道</span></font></span></font>html<font face="Droid Sans Fallback"><span lang="zh-CN"><font face="Droid Sans Fallback"><span lang="zh-CN">的格式</span></font></span></font>:
&lt;html&gt;&lt;header&gt;&lt;body&gt;&lt;body&gt;&lt;header&gt;&lt;html&gt;</p>
<p><font face="Droid Sans Fallback"><span lang="zh-CN"><font face="Droid Sans Fallback"><span lang="zh-CN">了解了</span></font></span></font>HTTP<font face="Droid Sans Fallback"><span lang="zh-CN"><font face="Droid Sans Fallback"><span lang="zh-CN">协议和</span></font></span></font>HTML<font face="Droid Sans Fallback"><span lang="zh-CN"><font face="Droid Sans Fallback"><span lang="zh-CN">文档，我们其实就明白了一个</span></font></span></font>Web<font face="Droid Sans Fallback"><span lang="zh-CN"><font face="Droid Sans Fallback"><span lang="zh-CN">应用的本质就是：
</span></font><font face="Droid Sans Fallback"><span lang="zh-CN"><b>浏览器发送一个</b></span></font></span></font><b>HTTP</b><font face="Droid Sans Fallback"><span lang="zh-CN"><font face="Droid Sans Fallback"><span lang="zh-CN"><b>请求</b></span></font></span></font><b>(</b><font face="Droid Sans Fallback"><span lang="zh-CN"><font face="Droid Sans Fallback"><span lang="zh-CN"><b>何为请求</b></span></font></span></font><b>,</b><font face="Droid Sans Fallback"><span lang="zh-CN"><font face="Droid Sans Fallback"><span lang="zh-CN"><b>这个请求就是</b></span></font></span></font>url?<b>)</b><font face="Droid Sans Fallback"><span lang="zh-CN"><font face="Droid Sans Fallback"><span lang="zh-CN"><b>；
服务器收到请求，需要生成一个</b></span></font></span></font><b>HTML</b><font face="Droid Sans Fallback"><span lang="zh-CN"><font face="Droid Sans Fallback"><span lang="zh-CN"><b>文档</b></span></font></span></font>(<font face="Droid Sans Fallback"><span lang="zh-CN"><font face="Droid Sans Fallback"><span lang="zh-CN"><b>这个需要在</b></span></font></span></font>web<font face="Droid Sans Fallback"><span lang="zh-CN"><font face="Droid Sans Fallback"><span lang="zh-CN"><b>服务端基于</b></span></font></span></font>Python<font face="Droid Sans Fallback"><span lang="zh-CN"><font face="Droid Sans Fallback"><span lang="zh-CN"><b>的</b></span></font></span></font>flask<font face="Droid Sans Fallback"><span lang="zh-CN"><font face="Droid Sans Fallback"><span lang="zh-CN"><b>框架编写</b></span></font></span></font>,)<font face="Droid Sans Fallback"><span lang="zh-CN"><font face="Droid Sans Fallback"><span lang="zh-CN"><b>；
服务器把</b></span></font></span></font><b>HTML</b><font face="Droid Sans Fallback"><span lang="zh-CN"><font face="Droid Sans Fallback"><span lang="zh-CN"><b>文档作为</b></span></font></span></font><b>HTTP</b><font face="Droid Sans Fallback"><span lang="zh-CN"><font face="Droid Sans Fallback"><span lang="zh-CN"><b>响应的</b></span></font></span></font><b>Body</b><font face="Droid Sans Fallback"><span lang="zh-CN"><font face="Droid Sans Fallback"><span lang="zh-CN">消息体</span></font><font face="Droid Sans Fallback"><span lang="zh-CN"><b>发送给浏览器；
浏览器收到</b></span></font></span></font><b>HTTP</b><font face="Droid Sans Fallback"><span lang="zh-CN"><font face="Droid Sans Fallback"><span lang="zh-CN"><b>响应，从</b></span></font></span></font><b>HTTP
Body</b><font face="Droid Sans Fallback"><span lang="zh-CN"><font face="Droid Sans Fallback"><span lang="zh-CN"><b>取出</b></span></font></span></font><b>HTML</b><font face="Droid Sans Fallback"><span lang="zh-CN"><font face="Droid Sans Fallback"><span lang="zh-CN"><b>文档并显示。
最简单的</b></span></font></span></font><b>Web</b><font face="Droid Sans Fallback"><span lang="zh-CN"><font face="Droid Sans Fallback"><span lang="zh-CN"><b>应用就是先把</b></span></font></span></font><b>HTML</b><font face="Droid Sans Fallback"><span lang="zh-CN"><font face="Droid Sans Fallback"><span lang="zh-CN"><b>用文件保存好，用一个现成的</b></span></font></span></font><b>HTTP</b><font face="Droid Sans Fallback"><span lang="zh-CN"><font face="Droid Sans Fallback"><span lang="zh-CN"><b>服务器软件，接收用户请求，从文件中读取</b></span></font></span></font><b>HTML</b><font face="Droid Sans Fallback"><span lang="zh-CN"><font face="Droid Sans Fallback"><span lang="zh-CN"><b>，返回</b></span></font><font face="Droid Sans Fallback"><span lang="zh-CN">。</span></font></span></font>Apache<font face="Droid Sans Fallback"><span lang="zh-CN"><font face="Droid Sans Fallback"><span lang="zh-CN">、</span></font></span></font>Nginx<font face="Droid Sans Fallback"><span lang="zh-CN"><font face="Droid Sans Fallback"><span lang="zh-CN">、</span></font></span></font>Lighttpd<font face="Droid Sans Fallback"><span lang="zh-CN"><font face="Droid Sans Fallback"><span lang="zh-CN">等这些常见的静态服务器就是干这件事情的。
</span></font><font face="Droid Sans Fallback"><span lang="zh-CN"><b>我们需要做的</b></span></font></span></font><b>:</b><font face="Droid Sans Fallback"><span lang="zh-CN"><font face="Droid Sans Fallback"><span lang="zh-CN">正确的做法是底层代码由专门的服务器软件实现，我们用</span></font></span></font>Python<font face="Droid Sans Fallback"><span lang="zh-CN"><font face="Droid Sans Fallback"><span lang="zh-CN">专注于生成</span></font></span></font>HTML<font face="Droid Sans Fallback"><span lang="zh-CN"><font face="Droid Sans Fallback"><span lang="zh-CN">文档。因为我们不希望接触到</span></font></span></font>TCP<font face="Droid Sans Fallback"><span lang="zh-CN"><font face="Droid Sans Fallback"><span lang="zh-CN">连接、</span></font></span></font>HTTP<font face="Droid Sans Fallback"><span lang="zh-CN"><font face="Droid Sans Fallback"><span lang="zh-CN">原始请求和响应格式，所以，需要一个统一的接口，让我们专心用</span></font></span></font>Python<font face="Droid Sans Fallback"><span lang="zh-CN"><font face="Droid Sans Fallback"><span lang="zh-CN">编写</span></font></span></font>Web<font face="Droid Sans Fallback"><span lang="zh-CN"><font face="Droid Sans Fallback"><span lang="zh-CN">业务。
这个接口就是</span></font></span></font>WSGI<font face="Droid Sans Fallback"><span lang="zh-CN"><font face="Droid Sans Fallback"><span lang="zh-CN">：</span></font></span></font>Web
Server Gateway Interface<font face="Droid Sans Fallback"><span lang="zh-CN"><font face="Droid Sans Fallback"><span lang="zh-CN">。
</span></font></span></font>
</p>
<p><font face="Droid Sans Fallback"><span lang="zh-CN"><font face="Droid Sans Fallback"><span lang="zh-CN">最简单的</span></font></span></font>web<font face="Droid Sans Fallback"><span lang="zh-CN"><font face="Droid Sans Fallback"><span lang="zh-CN">应用</span></font></span></font>:wsgi<font face="Droid Sans Fallback"><span lang="zh-CN"><font face="Droid Sans Fallback"><span lang="zh-CN">接口是基础</span></font></span></font>;<font face="Droid Sans Fallback"><span lang="zh-CN"><font face="Droid Sans Fallback"><span lang="zh-CN">无论多么复杂的</span></font></span></font>Web<font face="Droid Sans Fallback"><span lang="zh-CN"><font face="Droid Sans Fallback"><span lang="zh-CN">应用程序，入口都是一个</span></font></span></font>WSGI<font face="Droid Sans Fallback"><span lang="zh-CN"><font face="Droid Sans Fallback"><span lang="zh-CN">处理函数。</span></font></span></font>HTTP<font face="Droid Sans Fallback"><span lang="zh-CN"><font face="Droid Sans Fallback"><span lang="zh-CN">请求的所有输入信息都可以通过</span></font></span></font>environ<font face="Droid Sans Fallback"><span lang="zh-CN"><font face="Droid Sans Fallback"><span lang="zh-CN">获得，</span></font></span></font>HTTP<font face="Droid Sans Fallback"><span lang="zh-CN"><font face="Droid Sans Fallback"><span lang="zh-CN">响应的输出都可以通过</span></font></span></font>start_response()<font face="Droid Sans Fallback"><span lang="zh-CN"><font face="Droid Sans Fallback"><span lang="zh-CN">加上函数返回值作为</span></font></span></font>Body<font face="Droid Sans Fallback"><span lang="zh-CN"><font face="Droid Sans Fallback"><span lang="zh-CN">。但是复杂的</span></font></span></font>Web<font face="Droid Sans Fallback"><span lang="zh-CN"><font face="Droid Sans Fallback"><span lang="zh-CN">应用程序，光靠一个</span></font></span></font>WSGI<font face="Droid Sans Fallback"><span lang="zh-CN"><font face="Droid Sans Fallback"><span lang="zh-CN">函数来处理还是太底层了，我们需要在</span></font></span></font>WSGI<font face="Droid Sans Fallback"><span lang="zh-CN"><font face="Droid Sans Fallback"><span lang="zh-CN">之上再抽象出</span></font></span></font>Web<font face="Droid Sans Fallback"><span lang="zh-CN"><font face="Droid Sans Fallback"><span lang="zh-CN">框架，进一步简化</span></font></span></font>Web<font face="Droid Sans Fallback"><span lang="zh-CN"><font face="Droid Sans Fallback"><span lang="zh-CN">开发。</span></font></span></font><br>1
<font face="Droid Sans Fallback"><span lang="zh-CN"><font face="Droid Sans Fallback"><span lang="zh-CN">建立一个符合</span></font></span></font>WSGI<font face="Droid Sans Fallback"><span lang="zh-CN"><font face="Droid Sans Fallback"><span lang="zh-CN">的处理函数</span></font></span></font>,<font face="Droid Sans Fallback"><span lang="zh-CN"><font face="Droid Sans Fallback"><span lang="zh-CN">用来处理浏览器</span></font></span></font>(<font face="Droid Sans Fallback"><span lang="zh-CN"><font face="Droid Sans Fallback"><span lang="zh-CN">客户端</span></font></span></font>)<font face="Droid Sans Fallback"><span lang="zh-CN"><font face="Droid Sans Fallback"><span lang="zh-CN">发来的请求</span></font></span></font>,<font face="Droid Sans Fallback"><span lang="zh-CN"><font face="Droid Sans Fallback"><span lang="zh-CN">生成</span></font></span></font>html<font face="Droid Sans Fallback"><span lang="zh-CN"><font face="Droid Sans Fallback"><span lang="zh-CN">文档</span></font></span></font></p>
<p>def application(environ, start_response):</p>
<p>start_response('200 OK', [('Content-Type', 'text/html')])</p>
<p>return [b'&lt;h1&gt;Hello, web!&lt;/h1&gt;']</p>
<p>2
<font face="Droid Sans Fallback"><span lang="zh-CN"><font face="Droid Sans Fallback"><span lang="zh-CN">为了把</span></font></span></font>url<font face="Droid Sans Fallback"><span lang="zh-CN"><font face="Droid Sans Fallback"><span lang="zh-CN">请求映射到处理函数接口</span></font></span></font>,<font face="Droid Sans Fallback"><span lang="zh-CN"><font face="Droid Sans Fallback"><span lang="zh-CN">还需要一个</span></font></span></font>web<font face="Droid Sans Fallback"><span lang="zh-CN"><font face="Droid Sans Fallback"><span lang="zh-CN">服务器</span></font></span></font>(<font face="Droid Sans Fallback"><span lang="zh-CN"><font face="Droid Sans Fallback"><span lang="zh-CN">服务器中要定义好</span></font></span></font>ip<font face="Droid Sans Fallback"><span lang="zh-CN"><font face="Droid Sans Fallback"><span lang="zh-CN">和端口</span></font></span></font>,<font face="Droid Sans Fallback"><span lang="zh-CN"><font face="Droid Sans Fallback"><span lang="zh-CN">这就是客户端要访问的</span></font></span></font>endpoiont),<font face="Droid Sans Fallback"><span lang="zh-CN"><font face="Droid Sans Fallback"><span lang="zh-CN">服务器作用是解析</span></font></span></font>http<font face="Droid Sans Fallback"><span lang="zh-CN"><font face="Droid Sans Fallback"><span lang="zh-CN">协议</span></font></span></font>,<font face="Droid Sans Fallback"><span lang="zh-CN"><font face="Droid Sans Fallback"><span lang="zh-CN">同时该服务器也用来调用</span></font></span></font>wsgi<font face="Droid Sans Fallback"><span lang="zh-CN"><font face="Droid Sans Fallback"><span lang="zh-CN">函数</span></font></span></font>,</p>
<p><font face="Droid Sans Fallback"><span lang="zh-CN"><font face="Droid Sans Fallback"><span lang="zh-CN">但是这样太麻烦</span></font></span></font>,<font face="Droid Sans Fallback"><span lang="zh-CN"><font face="Droid Sans Fallback"><span lang="zh-CN">我们利用了</span></font></span></font>Python<font face="Droid Sans Fallback"><span lang="zh-CN"><font face="Droid Sans Fallback"><span lang="zh-CN">中的</span></font></span></font>flask<font face="Droid Sans Fallback"><span lang="zh-CN"><font face="Droid Sans Fallback"><span lang="zh-CN">框来编写</span></font></span></font>web<font face="Droid Sans Fallback"><span lang="zh-CN"><font face="Droid Sans Fallback"><span lang="zh-CN">服务器</span></font></span></font>.</p>
<p><font face="Droid Sans Fallback"><span lang="zh-CN"><font face="Droid Sans Fallback"><span lang="zh-CN">四种方法</span></font></span></font>:get
post put delete(post<font face="Droid Sans Fallback"><span lang="zh-CN"><font face="Droid Sans Fallback"><span lang="zh-CN">方法不明白其中的本质</span></font></span></font>,<font face="Droid Sans Fallback"><span lang="zh-CN"><font face="Droid Sans Fallback"><span lang="zh-CN">尤其是设计到参数的时候</span></font></span></font>)</p>
<p><font face="Droid Sans Fallback"><span lang="zh-CN"><font face="Droid Sans Fallback"><span lang="zh-CN">两步走战略</span></font></span></font>:</p>
<p><b>url</b><font face="Droid Sans Fallback"><span lang="zh-CN"><font face="Droid Sans Fallback"><span lang="zh-CN"><b>装饰器让映射更直观</b></span></font></span></font></p>
<p><font face="Droid Sans Fallback"><span lang="zh-CN"><font face="Droid Sans Fallback"><span lang="zh-CN"><b>还是要有处理函数</b></span></font></span></font><b>(</b><font face="Droid Sans Fallback"><span lang="zh-CN"><font face="Droid Sans Fallback"><span lang="zh-CN"><b>可以直接在函数中写处理的过程</b></span></font></span></font><b>,</b><font face="Droid Sans Fallback"><span lang="zh-CN"><font face="Droid Sans Fallback"><span lang="zh-CN"><b>也可以调用模板</b></span></font></span></font><b>)</b></p>
<p><br><br>
</p>
<p><font face="Droid Sans Fallback"><span lang="zh-CN"><font face="Droid Sans Fallback"><span lang="zh-CN">参数传递</span></font></span></font>:</p>
<p>flask<font face="Droid Sans Fallback"><span lang="zh-CN"><font face="Droid Sans Fallback"><span lang="zh-CN">提供了参数获取的方法</span></font></span></font>:</p>
<p>GET<font face="Droid Sans Fallback"><span lang="zh-CN"><font face="Droid Sans Fallback"><span lang="zh-CN">请求参数的基本方式</span></font></span></font>:flask.request.args.get(name)#name<font face="Droid Sans Fallback"><span lang="zh-CN"><font face="Droid Sans Fallback"><span lang="zh-CN">是参数名称</span></font></span></font></p>
<p>POST<font face="Droid Sans Fallback"><span lang="zh-CN"><font face="Droid Sans Fallback"><span lang="zh-CN">请求的参数</span></font></span></font>:flask.request.form['name']#name
<font face="Droid Sans Fallback"><span lang="zh-CN"><font face="Droid Sans Fallback"><span lang="zh-CN">是参数名称</span></font></span></font>,”<font face="Droid Sans Fallback"><span lang="zh-CN"><font face="Droid Sans Fallback"><span lang="zh-CN">输入名字”</span></font></span></font></p>
<p><font face="Droid Sans Fallback"><span lang="zh-CN"><font face="Droid Sans Fallback"><span lang="zh-CN">示例如下</span></font></span></font>:</p>
<p>import flask</p>
<p>html_txt=”””,&lt;!DOCTYPE html&gt;</p>
<p>&lt;html&gt;</p>
<p>&lt;body&gt;</p>
<p>&lt;h2&gt;<font face="Droid Sans Fallback"><span lang="zh-CN"><font face="Droid Sans Fallback"><span lang="zh-CN">收到</span></font></span></font>get<font face="Droid Sans Fallback"><span lang="zh-CN"><font face="Droid Sans Fallback"><span lang="zh-CN">请求</span></font></span></font>&lt;/h2&gt;</p>
<p>&lt;form method='post'&gt;</p>
<p>&lt;input type='text' name='name' placeholder='<font face="Droid Sans Fallback"><span lang="zh-CN"><font face="Droid Sans Fallback"><span lang="zh-CN">输入名字</span></font></span></font>'/&gt;</p>
<p>&lt;input type='submit' value='<font face="Droid Sans Fallback"><span lang="zh-CN"><font face="Droid Sans Fallback"><span lang="zh-CN">发送请求</span></font></span></font>'/&gt;</p>
<p>&lt;/form&gt;</p>
<p>&lt;/body&gt;</p>
<p>&lt;/html&gt;</p>
<p>”””</p>
<p>app=flask.Flask(__name__)</p>
<p>@app.route('/hello',methodS==['GET','POST'])</p>
<p>def hello():</p>
<p>if flask.request.method=='GET':</p>
<p>return html_txt</p>
<p>else:</p>
<p>return '<font face="Droid Sans Fallback"><span lang="zh-CN"><font face="Droid Sans Fallback"><span lang="zh-CN">你是</span></font></span></font>:'
+ name +' !'</p>
<p>if __name__=='__main__':<br>app.run('127.0.0.1',8080)</p>
<p><font face="Droid Sans Fallback"><span lang="zh-CN"><font face="Droid Sans Fallback"><span lang="zh-CN">接受上传文件</span></font></span></font>:(<font face="Droid Sans Fallback"><span lang="zh-CN"><font face="Droid Sans Fallback"><span lang="zh-CN">程序保存为</span></font></span></font>requestfile.py)</p>
<p><font face="Droid Sans Fallback"><span lang="zh-CN">对于</span></font>rest<font face="Droid Sans Fallback"><span lang="zh-CN">架构中无状态的理解</span></font>:</p>
<p><font face="Droid Sans Fallback"><span lang="zh-CN">无状态意味着</span></font>web
<font face="Droid Sans Fallback"><span lang="zh-CN">应用程序最重要的
</span></font>REST
<font face="Droid Sans Fallback"><span lang="zh-CN">原则是，客户端和服务器之间的交互在请求之间是无状态的。从客户端到服务器的每个请求都必须包含理解请求所必需的信息</span></font>.<font face="Droid Sans Fallback"><span lang="zh-CN">服务器无需记住客户端的状态</span></font>,<font face="Droid Sans Fallback"><span lang="zh-CN">我们给服务器发送
</span></font>HTTP <font face="Droid Sans Fallback"><span lang="zh-CN">请求之后，服务器根据请求，会给我们发送数据过来，但是，发送完，不会记录任何信息。</span></font></p>
<p><br><br><br>
</p>
</body>
</html>